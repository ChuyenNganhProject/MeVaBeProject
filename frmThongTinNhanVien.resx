<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxDong.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>